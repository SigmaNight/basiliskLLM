[project]
name = "basiliskllm"
dynamic = ["version"]
description = "Where LLMs Unite"
authors = [
    {name = "AndrÃ©-Abush Clause", email ="dev@andreabc.net"},
]
readme = "README.md"
license = {file = "LICENSE"}

[project.urls]
homepage = "https://github.com/SigmaNight/basiliskLLM"
repository = "https://github.com/SigmaNight/basiliskLLM"
issues = "https://github.com/SigmaNight/basiliskLLM/issues"

[build-system]
requires = ["cx_freeze>+7.0.0", "setuptools>=64.0.0", "setuptools_scm>=8"]
build-backend = "cx_freeze.build"
requires-python = ">=3.12"
[tool.setuptools]
packages = ["basilisk"]
[tool.setuptools_scm]

[tool.poetry]
name = "basiliskllm"
package-mode = false

[tool.poetry.dependencies]
accessible-output3 = {git = "https://github.com/SigmaNight/accessible_output3.git"}
anthropic = "^0.40.0"
babel = "^2.15.0"
cx-freeze = "^7.2.7"
google-generativeai = "^0.8.3"
httpx = "^0.28.1"
keyring = "^25.5.0"
markdown2 = "^2.5.1"
more-itertools = "^10.5.0"
numpy = "^2.1.3"
openai = "^1.55.3"
pillow = "^11.0.0"
psutil = "^6.1.0"
platformdirs = "^4.3.6"
pydantic = "2.10.2"
pydantic-settings = "^2.6.1"
python = "^3.12"
pywin32 = { version = "^308", markers = "sys_platform == 'win32'" }
pyyaml = "^6.0.1"
sounddevice = "^0.5.1"
truststore = "^0.10.0"
watchdog = "^6.0.0"
wxpython = "^4.2.2"

[tool.poetry.group.dev.dependencies]
commitizen = "^4.0.0"
pre-commit = "^4.0.1"
ruff = "^0.8.0"
setuptools-scm = "^8.0.4"

[tool.ruff]
src = ["src"]
respect-gitignore = true
line-length = 80
unsafe-fixes = false
target-version = "py312"
builtins = ["_", "gettext", "ngettext", "npgettext", "pgettext"]

[tool.ruff.format]
indent-style = "tab"
line-ending = "lf"
quote-style = "preserve"
skip-magic-trailing-comma = true

[tool.ruff.lint]
extend-select = ["INT","I","C90"]
[tool.ruff.lint.mccabe]
max-complexity = 10
[tool.ruff.lint.isort]
known-first-party = ["basilisk"]
split-on-trailing-comma = false
[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"


[tool.cxfreeze]
executables = [
    {script="basilisk/__main__.py", base="gui", target_name="basilisk"},
]
[tool.cxfreeze.build_exe]
optimize = 1
build_exe = "dist"
excludes = [
    "babel.messages", "commitizen", "distutils", "email", "ftplib", "h11.tests", "jinja2",
    "multiprocessing",
    "numpy._core.tests", "numpy.f2py", "numpy.fft", "numpy.ma", "numpy.polynomial", "numpy.random", "numpy.testing",
    "pip", "pydoc_data", "packaging",
    "setuptools", "setuptools_scm", "sqlite3",
    "tomllib", "test", "tkinter", "unittest",
    "wint32gui", "win32ui", "win32uiold", "winreg",
]
include_files = ["basilisk/res"]
includes = ["numpy", "httplib2.socks", "win32timezone"]
packages = ["numpy", "google.generativeai", "basilisk.provider_engine", "keyring"]
zip_include_packages = [
    "anyio", "annotated_types", "anthropic", "asyncio",
    "backports", "cachetools", "certifi", "cffi", "charset_normalizer", "concurrent", "collections", "colorama", "ctypes", "curses",
    "distro", "dotenv", "encodings", "email", "google", "googleapiclient", "grpc_status",
    "h11", "html", "httpcore", "http", "httplib2", "httpx",
    "idna", "importlib", "importlib_metadata", "importlib_resources",
    "jaraco", "jiter", "json", "keyring", "libloader", "logging",
    "openai", "numpy", "more_itertools",
    "PIL", "platform_utils", "platformdirs", "proto", "psutil", "pyasn1", "pyasn1_modules", "pycparser", "pyparsing", "pydantic", "pydantic_core", "pydantic_settings", "pywin", "pywin32_system32",
    "re", "rsa", "requests", "sniffio", "tarfile", "tokenizers", "tomli", "truststore", "tqdm", "uritemplate", "urllib", "urllib3",
    "watchdog", "win32api", "win32com", "win32ctypes", "win32timezone",
    "xml", "yaml", "zipfile", "zipp", "zoneinfo",
    "basilisk"]
